{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/mysqldump에 조건을 걸 수 없을까","result":{"data":{"markdownRemark":{"id":"a56c0037-8c25-5571-8173-f7326ba4ef3a","html":"<h2 id=\"짧은-글\" style=\"position:relative;\"><a href=\"#%EC%A7%A7%EC%9D%80-%EA%B8%80\" aria-label=\"짧은 글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>짧은 글</h2>\n<h3 id=\"mysqldump에-where-옵션을-추가할-수-있다\" style=\"position:relative;\"><a href=\"#mysqldump%EC%97%90-where-%EC%98%B5%EC%85%98%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"mysqldump에 where 옵션을 추가할 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mysqldump에 where 옵션을 추가할 수 있다. </h3>\n<p>아래와 같이 mysqldump에 옵션을 추가할 수 있다. <code class=\"language-text\">{}</code> 안에해당하는 내용은 대체하여 사용하시면 됩니다. (옵션에 대한 이해가 부족하다면 꼭 아래의 옵션 설명을 읽으시길 바랍니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">mysqldump --where <span class=\"token string\">\"seq > {firstSeq} AND seq &lt; {lastSeq}\"</span> -u <span class=\"token punctuation\">{</span>user_name<span class=\"token punctuation\">}</span> -p<span class=\"token punctuation\">{</span>P@ssw0rd<span class=\"token punctuation\">}</span> -h <span class=\"token punctuation\">{</span>remote_host<span class=\"token punctuation\">}</span> --database <span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> --tables <span class=\"token punctuation\">{</span>table_name<span class=\"token punctuation\">}</span> --no-create-info --no-create-db --single-transaction <span class=\"token operator\">></span> some_dump_file.sql</code></pre></div>\n<p>데이터 복구는 기존과 똑같은 방법으로 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">mysql -u <span class=\"token punctuation\">{</span>user_name<span class=\"token punctuation\">}</span> -p<span class=\"token punctuation\">{</span>P@ssw0rd<span class=\"token punctuation\">}</span> -h <span class=\"token punctuation\">{</span>remote_host<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span> some_dump_file.sql</code></pre></div>\n<h2 id=\"긴-글\" style=\"position:relative;\"><a href=\"#%EA%B8%B4-%EA%B8%80\" aria-label=\"긴 글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>긴 글</h2>\n<h3 id=\"시나리오\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시나리오</h3>\n<p>이번에 로그 DB와 운영 DB를 통합하는 작업을 진행하였다. 왜 이 작업을 진행했는 지는 나중에 다시 이야기 할 예정이다.</p>\n<p>로그 DB를 운영 DB에 통합한 뒤 로그 DB를 삭제하는 작업이었는데, 이 DB통합 프로세스를 무중단으로 할 수 있는 시나리오를 생각한 뒤 다음과 같은 방식으로 진행하려고 했다. 현재 어트랙트는 실시간 데이터를 제공하고 있지 않아,  24시간안에 동기화만 완료되면 완벽히 무중단이 가능하다.</p>\n<ol>\n<li>로그 DB를 기반으로 운영 DB에 테이블을 생성한다. (데이터 미포함) 이때 Auto Increment 정보도 같이 가져간다.</li>\n<li>\n<p>로그 서버를 운영 DB 정보로 바꾼다.</p>\n<ul>\n<li>실제로는 제품 API 서버에 이미 로그 서빙도 똑같이 구현 되어 있어서 DB정보와 DNS만 운영서버로 바꾸어 주었다.</li>\n<li>로그 서버 또한 제품 API 서버에 통합한 뒤 최종적으로 내릴 예정이었다.</li>\n</ul>\n</li>\n<li>\n<p>DNS 정보가 변경되는 동안 로그 DB에 쌓인 데이터는 수동으로 인서트하여 싱크를 맞춘다. </p>\n<ul>\n<li>수동으로 싱크 맞춘 데이터는 로그 DB에서 삭제한다.</li>\n</ul>\n</li>\n<li>기존에 있는 로그 DB데이터 중 운영 최초의 seq 이전데이터만 다 넣는다.</li>\n</ol>\n<p>위와 같은 방식으로 진행할 경우 정확하게 조건에 들어 맞는 무중단이 가능하며, 작업도 굉장히 편하고, PK 값이 오염되거나 중복될 일 같은 게 없었다. 문제는 4번에서 네트워크 문제로 데이터가 중간까지만 마이그레이션 되었다는 것이다. 다시 처음부터 마이그레이션을 할까 생각하다가 너무 시간이 오래걸리고, 이번에는 네트워크 유실이 발생하지 않을거라는 보장이 없기에 중간부터 마이그레이션을 할 수 없을까 찾아보다가 mysqldump에서도 where 조건을 사용할 수 있다는 걸 알았다.</p>\n<h3 id=\"mysqldump-옵션-설명\" style=\"position:relative;\"><a href=\"#mysqldump-%EC%98%B5%EC%85%98-%EC%84%A4%EB%AA%85\" aria-label=\"mysqldump 옵션 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mysqldump 옵션 설명</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">mysqldump --where <span class=\"token string\">\"seq > {firstSeq} AND seq &lt; {lastSeq}\"</span> -u <span class=\"token punctuation\">{</span>user_name<span class=\"token punctuation\">}</span> -p<span class=\"token punctuation\">{</span>P@ssw0rd<span class=\"token punctuation\">}</span> -h <span class=\"token punctuation\">{</span>remote_host<span class=\"token punctuation\">}</span> --database <span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> --tables <span class=\"token punctuation\">{</span>table_name<span class=\"token punctuation\">}</span> --no-create-info --no-create-db --single-transaction <span class=\"token operator\">></span> some_dump_file.sql</code></pre></div>\n<p>—where 옵션은 이 포스트의 핵심이다. 위와 같이 일반 적인 SQL의 where 과 같다. 필요에 따라 <code class=\"language-text\">&quot;seq &gt; {firstSeq} limit 500&quot;</code>  와 같은 식으로 리밋을 걸 수도 있다.</p>\n<p>-u, -p, -h 는 접속에 관한 정보니 생략한다.</p>\n<p>—database, —tables mysqldump의 경우 SQL을 통해 가져오는 게 아니기 때문에 명시적으로 두 옵션을 필수 적으로 사용해야한다. 여러분이 모든 테이블의 데이터를 조건을 걸어서 가져오는 걸 의도한 게 아니라면 말이다.</p>\n<p>—no-create-info, —no-create-db mysqldump에서는 기본적으로 테이블 생성정보를 가져오고, <strong>데이터를 복원 할때 이미 존재하는 테이블을 없앤 뒤</strong> 복원하기 때문에 중간에 있는 데이터만 복구하고 싶다면 꼭 써줘야 하는 옵션이다.</p>\n<p>—single-transaction InnoDB에서 테이블 락을 하고 싶지 않을 때 사용할 수 있는 옵션</p>","fields":{"slug":"/posts/mysqldump에 조건을 걸 수 없을까","tagSlugs":["/tag/mysql/","/tag/mysqldump/"]},"frontmatter":{"date":"2020-07-07T06:00:00.000Z","description":"mysqldump에 where 옵션을 추가할 수 있다.","tags":["Mysql","mysqldump"],"title":"mysqldump에 조건을 걸 수 없을까?","socialImage":"/media/image-2.jpg"}}},"pageContext":{"slug":"/posts/mysqldump에 조건을 걸 수 없을까"}}}